[tool.poetry]
name = "generic-template"
version = "0.0.0"
authors = ["Kyle Finley <kyle@finley.sh>"]
description = "Generic Python project template."
license = "Apache-2.0"

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.0"

[tool.poetry.group.docs.dependencies]
furo = "^2024.1.29"
recommonmark = "^0.7.1"
sphinx = "^7.2.6"
sphinx-copybutton = "^0.5.2"
sphinx-design = "^0.5.0"
sphinxcontrib-apidoc = "^0.5.0"

[tool.poetry.group.lint.dependencies]
black = "^24.4.0"
ruff = "^0.3.7"

[tool.poetry.group.test.dependencies]
coverage = "^7.4.4"
pytest = "^8.1.1"
pytest-cov = ">=3.0.0"
pytest-mock = ">=3.7.0"

[tool.black]
force-exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''
include = '\.pyi?$'
line-length = 88
target-version = ["py311", "py312"]

[tool.coverage.report]
exclude_lines = [
  "@overload",
  "cov: ignore",  # standard exclude comment
  "if TYPE_CHECKING:",  # excluded blocks
  "if __name__ == .__main__.:",
  "raise AssertionError",  # defensive exceptions
  "raise NotImplementedError",
]
# fail_under = 90  # set a minimum coverage percentage
precision = 2
show_missing = true

[tool.coverage.run]
omit = [
  "*/type_defs.py",  # assuming this would not contain any logic
]

[tool.pyright]
exclude = [
  "**/.eggs",
  "**/.git",
  "**/.venv",
  "**/__pycache__",
  "**/docs",
  "**/node_modules",
  "**/typings",
]
pythonVersion = "3.11"
reportDuplicateImport = "none"
reportImportCycles = "none"
reportIncompatibleMethodOverride = "warning"
reportMissingTypeStubs = "none"
reportPrivateUsage = "none"
reportUnknownMemberType = "none"
reportUnnecessaryIsInstance = "warning"
reportUnusedImport = "none"
reportUnusedVariable = "none"
reportWildcardImportFromLibrary = "none"
strictParameterNoneValue = false
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
venv = ".venv"

[tool.pytest.ini_options]
addopts = [
  "--cov-config=pyproject.toml",
  "--no-cov-on-fail",
]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::pytest_mock.PytestMockWarning",
]
markers = [
  "wip: isolate tests currently being worked on.",
]
minversion = 6.2
python_classes = ["Test*"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
testpaths = ["tests"]

[tool.tomlsort]
all = true
in_place = true
sort_first = ["tool", "tool.poetry"]
spaces_before_inline_comment = 2
trailing_comma_inline_array = true
overrides."tool.poetry".first = ["name", "version"]
overrides."tool.poetry.dependencies".first = ["python"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.7"]
